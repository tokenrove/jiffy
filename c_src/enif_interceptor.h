#define SLOW_ENIF_THRESHOLD 23000

#define STRINGIFY_HELPER(...) #__VA_ARGS__
#define STRINGIFY(...) STRINGIFY_HELPER(__VA_ARGS__)

#ifdef TRACE_WITH_COZ
/* This doesn't actually work. */
#include <coz.h>

#define TRACE_INT(f, prelude, postlude, ...)                            \
  ({ COZ_BEGIN(STRINGIFY(f));                                           \
    prelude f(__VA_ARGS__);                                             \
    COZ_END(STRINGIFY(f));                                              \
    postlude })

#else
#include <x86intrin.h>

#define TRACE_INT(f, prelude, postlude, ...)                            \
  ({ uint64_t t0 = __rdtsc();                                           \
    prelude f(__VA_ARGS__);                                             \
    uint64_t dt = __rdtsc() - t0;                                       \
    if (dt > SLOW_ENIF_THRESHOLD) {                                     \
      fprintf(stderr, "%s call to " STRINGIFY(f) "(" STRINGIFY(__VA_ARGS__) \
              ") too slow: %lu\n", __FUNCTION__, dt);                   \
    }                                                                   \
    postlude })

#endif

#define TRACE(f, ...) TRACE_INT(f, __auto_type r =, r;, __VA_ARGS__)
#define TRACE_VOID(f, ...) TRACE_INT(f, , , __VA_ARGS__)

#define enif_priv_data(...) TRACE(enif_priv_data, __VA_ARGS__)
#define enif_alloc(...) TRACE(enif_alloc, __VA_ARGS__)
#define enif_free(...) TRACE(enif_free, __VA_ARGS__)
#define enif_is_atom(...) TRACE(enif_is_atom, __VA_ARGS__)
#define enif_is_binary(...) TRACE(enif_is_binary, __VA_ARGS__)
#define enif_is_ref(...) TRACE(enif_is_ref, __VA_ARGS__)
#define enif_inspect_binary(...) TRACE(enif_inspect_binary, __VA_ARGS__)
#define enif_alloc_binary(...) TRACE(enif_alloc_binary, __VA_ARGS__)
#define enif_realloc_binary(...) TRACE(enif_realloc_binary, __VA_ARGS__)
#define enif_release_binary(...) TRACE_VOID(enif_release_binary, __VA_ARGS__)
#define enif_get_int(...) TRACE(enif_get_int, __VA_ARGS__)
#define enif_get_ulong(...) TRACE(enif_get_ulong, __VA_ARGS__)
#define enif_get_double(...) TRACE(enif_get_double, __VA_ARGS__)
#define enif_get_list_cell(...) TRACE(enif_get_list_cell, __VA_ARGS__)
#define enif_get_tuple(...) TRACE(enif_get_tuple, __VA_ARGS__)
#define enif_is_identical(...) TRACE(enif_is_identical, __VA_ARGS__)
#define enif_compare(...) TRACE(enif_compare, __VA_ARGS__)
#define enif_make_binary(...) TRACE(enif_make_binary, __VA_ARGS__)
#define enif_make_badarg(...) TRACE(enif_make_badarg, __VA_ARGS__)
#define enif_make_int(...) TRACE(enif_make_int, __VA_ARGS__)
#define enif_make_ulong(...) TRACE(enif_make_ulong, __VA_ARGS__)
#define enif_make_double(...) TRACE(enif_make_double, __VA_ARGS__)
#define enif_make_atom(...) TRACE(enif_make_atom, __VA_ARGS__)
#define enif_make_existing_atom(...) TRACE(enif_make_existing_atom, __VA_ARGS__)
#define enif_make_tuple(...) TRACE(enif_make_tuple, __VA_ARGS__)
#define enif_make_list(...) TRACE(enif_make_list, __VA_ARGS__)
#define enif_make_list_cell(...) TRACE(enif_make_list_cell, __VA_ARGS__)
#define enif_make_string(...) TRACE(enif_make_string, __VA_ARGS__)
#define enif_make_ref(...) TRACE(enif_make_ref, __VA_ARGS__) TRACE(TRACE, __VA_ARGS__)
#define enif_mutex_create(...) TRACE(enif_mutex_create, __VA_ARGS__)
#define enif_mutex_destroy(...) TRACE(enif_mutex_destroy, __VA_ARGS__)
#define enif_mutex_trylock(...) TRACE(enif_mutex_trylock, __VA_ARGS__)
#define enif_mutex_lock(...) TRACE(enif_mutex_lock, __VA_ARGS__)
#define enif_mutex_unlock(...) TRACE(enif_mutex_unlock, __VA_ARGS__)
#define enif_cond_create(...) TRACE(enif_cond_create, __VA_ARGS__)
#define enif_cond_destroy(...) TRACE(enif_cond_destroy, __VA_ARGS__)
#define enif_cond_signal(...) TRACE(enif_cond_signal, __VA_ARGS__)
#define enif_cond_broadcast(...) TRACE(enif_cond_broadcast, __VA_ARGS__)
#define enif_cond_wait(...) TRACE(enif_cond_wait, __VA_ARGS__)
#define enif_rwlock_create(...) TRACE(enif_rwlock_create, __VA_ARGS__)
#define enif_rwlock_destroy(...) TRACE(enif_rwlock_destroy, __VA_ARGS__)
#define enif_rwlock_tryrlock(...) TRACE(enif_rwlock_tryrlock, __VA_ARGS__)
#define enif_rwlock_rlock(...) TRACE(enif_rwlock_rlock, __VA_ARGS__)
#define enif_rwlock_runlock(...) TRACE(enif_rwlock_runlock, __VA_ARGS__)
#define enif_rwlock_tryrwlock(...) TRACE(enif_rwlock_tryrwlock, __VA_ARGS__)
#define enif_rwlock_rwlock(...) TRACE(enif_rwlock_rwlock, __VA_ARGS__)
#define enif_rwlock_rwunlock(...) TRACE(enif_rwlock_rwunlock, __VA_ARGS__)
#define enif_tsd_key_create(...) TRACE(enif_tsd_key_create, __VA_ARGS__)
#define enif_tsd_key_destroy(...) TRACE(enif_tsd_key_destroy, __VA_ARGS__)
#define enif_tsd_set(...) TRACE(enif_tsd_set, __VA_ARGS__)
#define enif_tsd_get(...) TRACE(enif_tsd_get, __VA_ARGS__)
#define enif_thread_opts_create(...) TRACE(enif_thread_opts_create, __VA_ARGS__)
#define enif_thread_opts_destroy(...) TRACE(enif_thread_opts_destroy, __VA_ARGS__)
#define enif_thread_create(...) TRACE(enif_thread_create, __VA_ARGS__)
#define enif_thread_self(...) TRACE(enif_thread_self, __VA_ARGS__)
#define enif_equal_tids(...) TRACE(enif_equal_tids, __VA_ARGS__)
#define enif_thread_exit(...) TRACE(enif_thread_exit, __VA_ARGS__)
#define enif_thread_join(...) TRACE(enif_thread_join, __VA_ARGS__)
#define enif_realloc(...) TRACE(enif_realloc, __VA_ARGS__)
#define enif_system_info(...) TRACE(enif_system_info, __VA_ARGS__)
#define enif_fprintf(...) TRACE(enif_fprintf, __VA_ARGS__)
#define enif_inspect_iolist_as_binary(...) TRACE(enif_inspect_iolist_as_binary, __VA_ARGS__)
#define enif_make_sub_binary(...) TRACE(enif_make_sub_binary, __VA_ARGS__)
#define enif_get_string(...) TRACE(enif_get_string, __VA_ARGS__)
#define enif_get_atom(...) TRACE(enif_get_atom, __VA_ARGS__)
#define enif_is_fun(...) TRACE(enif_is_fun, __VA_ARGS__)
#define enif_is_pid(...) TRACE(enif_is_pid, __VA_ARGS__)
#define enif_is_port(...) TRACE(enif_is_port, __VA_ARGS__)
#define enif_get_uint(...) TRACE(enif_get_uint, __VA_ARGS__)
#define enif_get_long(...) TRACE(enif_get_long, __VA_ARGS__)
#define enif_make_uint(...) TRACE(enif_make_uint, __VA_ARGS__)
#define enif_make_long(...) TRACE(enif_make_long, __VA_ARGS__)
#define enif_make_tuple_from_array(...) TRACE(enif_make_tuple_from_array, __VA_ARGS__)
#define enif_make_list_from_array(...) TRACE(enif_make_list_from_array, __VA_ARGS__)
#define enif_is_empty_list(...) TRACE(enif_is_empty_list, __VA_ARGS__)
#define enif_open_resource_type(...) TRACE(enif_open_resource_type, __VA_ARGS__)
#define enif_alloc_resource(...) TRACE(enif_alloc_resource, __VA_ARGS__)
#define enif_release_resource(...) TRACE_VOID(enif_release_resource, __VA_ARGS__)
#define enif_make_resource(...) TRACE(enif_make_resource, __VA_ARGS__)
#define enif_get_resource(...) TRACE(enif_get_resource, __VA_ARGS__)
#define enif_sizeof_resource(...) TRACE(enif_sizeof_resource, __VA_ARGS__)
#define enif_make_new_binary(...) TRACE(enif_make_new_binary, __VA_ARGS__)
#define enif_is_list(...) TRACE(enif_is_list, __VA_ARGS__)
#define enif_is_tuple(...) TRACE(enif_is_tuple, __VA_ARGS__)
#define enif_get_atom_length(...) TRACE(enif_get_atom_length, __VA_ARGS__)
#define enif_get_list_length(...) TRACE(enif_get_list_length, __VA_ARGS__)
#define enif_make_atom_len(...) TRACE(enif_make_atom_len, __VA_ARGS__)
#define enif_make_existing_atom_len(...) TRACE(enif_make_existing_atom_len, __VA_ARGS__)
#define enif_make_string_len(...) TRACE(enif_make_string_len, __VA_ARGS__)
#define enif_alloc_env(...) TRACE(enif_alloc_env, __VA_ARGS__)
#define enif_free_env(...) TRACE(enif_free_env, __VA_ARGS__)
#define enif_clear_env(...) TRACE(enif_clear_env, __VA_ARGS__)
#define enif_send(...) TRACE(enif_send, __VA_ARGS__)
#define enif_make_copy(...) TRACE(enif_make_copy, __VA_ARGS__)
#define enif_self(...) TRACE(enif_self, __VA_ARGS__)
#define enif_get_local_pid(...) TRACE(enif_get_local_pid, __VA_ARGS__)
#define enif_keep_resource(...) TRACE(enif_keep_resource, __VA_ARGS__)
#define enif_make_resource_binary(...) TRACE(enif_make_resource_binary, __VA_ARGS__)
#define enif_is_exception(...) TRACE(enif_is_exception, __VA_ARGS__)
#define enif_make_reverse_list(...) TRACE(enif_make_reverse_list, __VA_ARGS__)
#define enif_is_number(...) TRACE(enif_is_number, __VA_ARGS__)
#define enif_dlopen(...) TRACE(enif_dlopen, __VA_ARGS__)
#define enif_dlsym(...) TRACE(enif_dlsym, __VA_ARGS__)
#define enif_consume_timeslice(...) TRACE(enif_consume_timeslice, __VA_ARGS__)
#define enif_is_map(...) TRACE(enif_is_map, __VA_ARGS__)
#define enif_get_map_size(...) TRACE(enif_get_map_size, __VA_ARGS__)
#define enif_make_new_map(...) TRACE(enif_make_new_map, __VA_ARGS__)
#define enif_make_map_put(...) TRACE(enif_make_map_put, __VA_ARGS__)
#define enif_get_map_value(...) TRACE(enif_get_map_value, __VA_ARGS__)
#define enif_make_map_update(...) TRACE(enif_make_map_update, __VA_ARGS__)
#define enif_make_map_remove(...) TRACE(enif_make_map_remove, __VA_ARGS__)
#define enif_map_iterator_create(...) TRACE(enif_map_iterator_create, __VA_ARGS__)
#define enif_map_iterator_destroy(...) TRACE_VOID(enif_map_iterator_destroy, __VA_ARGS__)
#define enif_map_iterator_is_head(...) TRACE(enif_map_iterator_is_head, __VA_ARGS__)
#define enif_map_iterator_is_tail(...) TRACE(enif_map_iterator_is_tail, __VA_ARGS__)
#define enif_map_iterator_next(...) TRACE(enif_map_iterator_next, __VA_ARGS__)
#define enif_map_iterator_prev(...) TRACE(enif_map_iterator_prev, __VA_ARGS__)
#define enif_map_iterator_get_pair(...) TRACE(enif_map_iterator_get_pair, __VA_ARGS__)
#define enif_schedule_nif(...) TRACE(enif_schedule_nif, __VA_ARGS__)
#define enif_has_pending_exception(...) TRACE(enif_has_pending_exception, __VA_ARGS__)
#define enif_raise_exception(...) TRACE(enif_raise_exception, __VA_ARGS__)
#define enif_getenv(...) TRACE(enif_getenv, __VA_ARGS__)

